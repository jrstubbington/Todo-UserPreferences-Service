openapi: 3.0.1
info:
  title: User Preferences Management API
  description: Service for managing all user preferences
  contact:
    name: James Stubbington
    url: 'https://github.com/jrstubbington'
    email: jamesrstubbington@gmail.com
  license:
    name: 'License: MIT'
    url: 'https://github.com/jrstubbington/Todo-User-Preferences-Service/blob/master/LICENSE'
  version: 1.0-SNAPSHOT
servers:
  - url: 'http://localhost:8084'
    description: Generated server url
tags:
  - name: User Preferences Management
    description: A collection of APIs designed to handle functions related to User Preferences
  - name: Global Preferences Management
    description: A collection of APIs designed to handle functions related to all preferences
paths:
  /v1/preferences/:
    get:
      tags:
        - Global Preferences Management
      summary: View a list of all available preferences
      operationId: getAllPreferences
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseContainerPreferenceDto'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Global Preferences Management
      summary: Create a new preference
      operationId: addNewPreference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenceDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseContainerPreferenceDto'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    put:
      tags:
        - Global Preferences Management
      summary: Update an existing preference
      operationId: updatePreference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenceDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseContainerPreferenceDto'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/v1/preferences/{uuid}':
    get:
      tags:
        - Global Preferences Management
      summary: Get a specific preference
      operationId: getPreferenceByUuid
      parameters:
        - name: uuid
          in: path
          description: Preference uuid to get preferences for
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseContainerPreferenceDto'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    delete:
      tags:
        - Global Preferences Management
      summary: Delete a specific preference
      operationId: deletePreferenceByUuid
      parameters:
        - name: uuid
          in: path
          description: Preference uuid to delete preference for
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/v1/preferences/name/{name}':
    get:
      tags:
        - Global Preferences Management
      summary: Get a specific preference by name
      operationId: getPreferenceByName
      parameters:
        - name: name
          in: path
          description: Preference name to get preference of
          required: true
          schema:
            type: string

      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseContainerPreferenceDto'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  #
  #
  #
  #
  '/v1/preferences/user/':
    post:
      tags:
        - User Preferences Management
      summary: Create a preference for a specific user
      operationId: createPreferencesForUserUuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPreferenceDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseContainerUserPreferenceDto'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  '/v1/preferences/user/{uuid}':
    get:
      tags:
        - User Preferences Management
      summary: Get a specific user's preferences
      operationId: getPreferencesForUserUuid
      parameters:
        - name: uuid
          in: path
          description: User uuid to get preferences for
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseContainerUserPreferenceDto'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    put:
      tags:
        - User Preferences Management
      summary: Update all of specific user's preferences
      operationId: updatePreferencesForUserUuid
      parameters:
        - name: uuid
          in: path
          description: User uuid to set preferences list for
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/UserPreferenceDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseContainerUserPreferenceDto'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'

    delete:
      tags:
        - User Preferences Management
      summary: Delete a specific user's preferences
      operationId: deletePreferencesForUserUuid
      parameters:
        - name: uuid
          in: path
          description: User uuid to get preferences for
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '405':
          description: Method not allowed
  # This should absolutely be done with JPA filtering
  '/v1/preferences/name/{preference_name}/user/{user_uuid}':
    get:
      tags:
        - User Preferences Management
      summary: Get a specific user's preference by the preference name
      operationId: getSpecificPreferenceForUserUuidByName
      parameters:
        - name: user_uuid
          in: path
          description: User uuid to get preferences for
          required: true
          schema:
            type: string
            format: uuid
        - name: preference_name
          in: path
          description: Preference name to get preferences for
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseContainerUserPreferenceDto'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  #
  #
  #
  #
  '/v1/preferences/categories':
    get:
      tags:
        - Preference Category Management
      summary: Create a new Preference Category
      operationId: getAllPreferenceCategories
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 0
            minimum: 0
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            format: int32
            default: 10
            minimum: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseContainerCategoryDto'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
    post:
      tags:
        - Preference Category Management
      summary: Create a preference category
      operationId: createPreferenceCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreferenceCategoryDto'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseContainerPreferenceCategoryDto'
        '400':
          description: Client Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
        '500':
          description: Internal error has occurred
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDetails'
  #
  #
  #
  #



components:
  schemas:
    ErrorDetails:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
        message:
          type: string
        details:
          type: array
          items:
            type: string
        requestInformation:
          type: string
        errorCode:
          type: string
        moreInfo:
          type: string
    ResponseContainerCategoryDto:
      type: object
      properties:
        success:
          type: boolean
        statusDescription:
          type: string
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int64
        page:
          type: integer
          format: int64
        last:
          type: boolean
        size:
          type: integer
          format: int32
        type:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/PreferenceCategoryDto'
    ResponseContainerPreferenceDto:
      type: object
      properties:
        success:
          type: boolean
        statusDescription:
          type: string
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int64
        page:
          type: integer
          format: int64
        last:
          type: boolean
        size:
          type: integer
          format: int32
        type:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/PreferenceDto'
    ResponseContainerPreferenceCategoryDto:
      type: object
      properties:
        success:
          type: boolean
        statusDescription:
          type: string
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int64
        page:
          type: integer
          format: int64
        last:
          type: boolean
        size:
          type: integer
          format: int32
        type:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/PreferenceCategoryDto'
    ResponseContainerUserPreferenceDto:
      type: object
      properties:
        success:
          type: boolean
        statusDescription:
          type: string
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        pageSize:
          type: integer
          format: int64
        page:
          type: integer
          format: int64
        last:
          type: boolean
        size:
          type: integer
          format: int32
        type:
          type: string
        data:
          type: array
          items:
            $ref: '#/components/schemas/UserPreferenceDto'
    PreferenceDto:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        preferenceCategoryUuid:
          type: string
          format: uuid
        name:
          type: string
        description:
          type: string
        defaultSelection:
          type: boolean
          default: false

        dateCreated:
          type: string
          format: date-time
          readOnly: true
    UserPreferenceDto:
      type: object
      properties:
        preferenceUuid:
          type: string
          format: uuid
        userSelection:
          type: boolean
          default: false
        dateCreated:
          type: string
          format: date-time
          readOnly: true
    PreferenceCategoryDto:
      type: object
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        # preferences:
        #   type: array
        #   items:
        #     $ref: '#/components/schemas/PreferenceDto'
        preferenceUuids:
          type: array
          items:
            type: string
            format: uuid
        dateCreated:
          type: string
          format: date-time
          readOnly: true
